// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Dominio
{
    public partial class PETHOUSEContext : DbContext
    {
        public PETHOUSEContext()
        {
        }

        public PETHOUSEContext(DbContextOptions<PETHOUSEContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AnimAdoptable> AnimAdoptable { get; set; }
        public virtual DbSet<Atencion> Atencion { get; set; }
        public virtual DbSet<Cita> Cita { get; set; }
        public virtual DbSet<Detalles_Pedido> Detalles_Pedido { get; set; }
        public virtual DbSet<HistoriaClinica> HistoriaClinica { get; set; }
        public virtual DbSet<Mascota> Mascota { get; set; }
        public virtual DbSet<Pedido> Pedido { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Veterinario> Veterinario { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AnimAdoptable>(entity =>
            {
                entity.HasKey(e => e.IDAdoptable)
                    .HasName("XPKAdoptable");

                entity.Property(e => e.IDAdoptable)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DNI)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Especie)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Nombre)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Raza)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Sexo)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.HasOne(d => d.DNINavigation)
                    .WithMany(p => p.AnimAdoptable)
                    .HasForeignKey(d => d.DNI)
                    .HasConstraintName("R_32");
            });

            modelBuilder.Entity<Atencion>(entity =>
            {
                entity.HasKey(e => e.IDAtencion)
                    .HasName("XPKAtencion");

                entity.Property(e => e.IDAtencion)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DNI)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IDCita)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IDHistoriaC)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IDMascota)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.HasOne(d => d.DNINavigation)
                    .WithMany(p => p.Atencion)
                    .HasForeignKey(d => d.DNI)
                    .HasConstraintName("R_79");

                entity.HasOne(d => d.IDCitaNavigation)
                    .WithMany(p => p.Atencion)
                    .HasForeignKey(d => d.IDCita)
                    .HasConstraintName("R_80");

                entity.HasOne(d => d.IDHistoriaCNavigation)
                    .WithMany(p => p.Atencion)
                    .HasForeignKey(d => d.IDHistoriaC)
                    .HasConstraintName("R_81");

                entity.HasOne(d => d.IDMascotaNavigation)
                    .WithMany(p => p.Atencion)
                    .HasForeignKey(d => d.IDMascota)
                    .HasConstraintName("R_78");
            });

            modelBuilder.Entity<Cita>(entity =>
            {
                entity.HasKey(e => e.IDCita)
                    .HasName("XPKCita");

                entity.Property(e => e.IDCita)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Fecha_Hora).HasColumnType("datetime");

                entity.Property(e => e.IDVeterinario)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.HasOne(d => d.IDVeterinarioNavigation)
                    .WithMany(p => p.Cita)
                    .HasForeignKey(d => d.IDVeterinario)
                    .HasConstraintName("R_65");
            });

            modelBuilder.Entity<Detalles_Pedido>(entity =>
            {
                entity.HasKey(e => new { e.IDPedido, e.IDProducto })
                    .HasName("XPKPedido_Producto");

                entity.Property(e => e.IDPedido)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IDProducto)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.HasOne(d => d.IDPedidoNavigation)
                    .WithMany(p => p.Detalles_Pedido)
                    .HasForeignKey(d => d.IDPedido)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("R_76");

                entity.HasOne(d => d.IDProductoNavigation)
                    .WithMany(p => p.Detalles_Pedido)
                    .HasForeignKey(d => d.IDProducto)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("R_77");
            });

            modelBuilder.Entity<HistoriaClinica>(entity =>
            {
                entity.HasKey(e => e.IDHistoriaC)
                    .HasName("XPKHistoriaClinica");

                entity.Property(e => e.IDHistoriaC)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Diagnostico)
                    .IsRequired()
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Examenes)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.FechaRegistro).HasColumnType("datetime");

                entity.Property(e => e.Medicamentos)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Tratamiento)
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Mascota>(entity =>
            {
                entity.HasKey(e => e.IDMascota)
                    .HasName("XPKMascota");

                entity.Property(e => e.IDMascota)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DNI)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Edad)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Especie)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Raza)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Sexo)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.HasOne(d => d.DNINavigation)
                    .WithMany(p => p.Mascota)
                    .HasForeignKey(d => d.DNI)
                    .HasConstraintName("R_45");
            });

            modelBuilder.Entity<Pedido>(entity =>
            {
                entity.HasKey(e => e.IDPedido)
                    .HasName("XPKPedido");

                entity.Property(e => e.IDPedido)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DNI)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FechaPedido).HasColumnType("datetime");

                entity.HasOne(d => d.DNINavigation)
                    .WithMany(p => p.Pedido)
                    .HasForeignKey(d => d.DNI)
                    .HasConstraintName("R_74");
            });

            modelBuilder.Entity<Producto>(entity =>
            {
                entity.HasKey(e => e.IDProducto)
                    .HasName("XPKProducto");

                entity.Property(e => e.IDProducto)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Categoria)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Marca)
                    .HasMaxLength(70)
                    .IsUnicode(false);

                entity.Property(e => e.Nombre)
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Usuario>(entity =>
            {
                entity.HasKey(e => e.DNI)
                    .HasName("XPKUsuario");

                entity.Property(e => e.DNI)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Correo)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Direccion)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Nombre)
                    .HasMaxLength(70)
                    .IsUnicode(false);

                entity.Property(e => e.Telefono)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Veterinario>(entity =>
            {
                entity.HasKey(e => e.IDVeterinario)
                    .HasName("XPKVeterinario");

                entity.Property(e => e.IDVeterinario)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ApellidoM)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ApellidoP)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Correo)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(700)
                    .IsUnicode(false);

                entity.Property(e => e.Especialidad)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FechaHora_Trabajo).HasColumnType("datetime");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Telefono)
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}